name: CI

on:
  push:
    branches: [ main, develop, add-workflow-build ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [22.12.0]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python (for node-gyp)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Typecheck
      run: pnpm typecheck
    
    - name: Lint
      run: pnpm lint
    
    - name: Build all
      run: pnpm build
    
    # Build specific apps to ensure they work
    - name: Build web app
      run: pnpm --filter @vibetree/web build
    
    - name: Build server
      run: pnpm --filter @vibetree/server build
      
    # Desktop app build only on non-Linux due to potential GUI dependencies
    - name: Build desktop app (non-Linux)
      if: matrix.os != 'ubuntu-latest'
      run: pnpm --filter @vibetree/desktop build

  e2e-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build dependencies
      run: pnpm build:deps

    - name: Build desktop app
      run: pnpm --filter @vibetree/desktop build

    - name: Compile test main file
      run: |
        cd apps/desktop
        npx tsc src/main/test-index.ts --outDir dist/main --target es2020 --module commonjs --esModuleInterop --allowSyntheticDefaultImports --resolveJsonModule

    - name: Install Playwright browsers
      run: pnpm --filter @vibetree/desktop exec playwright install

    - name: Setup virtual display (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    - name: Run e2e tests
      run: pnpm --filter @vibetree/desktop exec playwright test final-test.spec.ts
      env:
        CI: true
        DISPLAY: ${{ runner.os == 'Linux' && ':99' || '' }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results-${{ matrix.os }}
        path: apps/desktop/test-results/
        retention-days: 7

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.os }}
        path: apps/desktop/playwright-report/
        retention-days: 7

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-screenshots-${{ matrix.os }}
        path: apps/desktop/*.png
        retention-days: 7