name: CI

on:
  push:
    branches: [ main, develop, add-workflow-build ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Typecheck
      run: pnpm typecheck
    
    - name: Lint
      run: pnpm lint

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    needs: lint-and-typecheck
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python (for node-gyp)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Build all
      run: pnpm build
    
    - name: Build web app
      run: pnpm --filter @vibetree/web build
    
    - name: Build server
      run: pnpm --filter @vibetree/server build
      
    - name: Build desktop app
      run: pnpm --filter @vibetree/desktop build

  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python (for node-gyp)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Build all
      run: pnpm build
    
    - name: Build web app
      run: pnpm --filter @vibetree/web build
    
    - name: Build server
      run: pnpm --filter @vibetree/server build
      
    # Skip desktop app build on Linux due to potential GUI dependencies

  build-macos:
    name: Build (macOS)
    runs-on: macos-latest
    needs: lint-and-typecheck
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python (for node-gyp)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build packages (core and ui)
      run: pnpm build:deps
    
    - name: Build all
      run: pnpm build
    
    - name: Build web app
      run: pnpm --filter @vibetree/web build
    
    - name: Build server
      run: pnpm --filter @vibetree/server build
      
    - name: Build desktop app
      run: pnpm --filter @vibetree/desktop build

  e2e-tests:
    name: E2E Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    needs: [build-windows, build-linux, build-macos]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.12.0
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build dependencies
      run: pnpm build:deps

    - name: Build desktop app
      run: pnpm --filter @vibetree/desktop build

    - name: Compile test main file
      run: |
        cd apps/desktop
        npx tsc src/main/test-index.ts --outDir dist/main --target es2020 --module commonjs --esModuleInterop --allowSyntheticDefaultImports --resolveJsonModule

    - name: Install Playwright browsers and dependencies
      run: |
        pnpm --filter @vibetree/desktop exec playwright install
        pnpm --filter @vibetree/desktop exec playwright install-deps

    - name: Setup virtual display (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libnss3 libatk-bridge2.0-0 libdrm-dev libxcomposite-dev libxdamage1 libxfixes-dev libxrandr-dev libgbm-dev libxss1 libasound2t64
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    - name: Rebuild Electron native modules
      run: pnpm --filter @vibetree/desktop exec electron-rebuild || true

    - name: Run e2e tests (Windows)
      if: runner.os == 'Windows'
      run: pnpm --filter @vibetree/desktop exec playwright test ci-smoke-test.spec.ts
      env:
        CI: true
        ELECTRON_DISABLE_SANDBOX: 1

    - name: Run e2e tests (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        # Run smoke tests in CI (simpler, more reliable)
        pnpm --filter @vibetree/desktop exec playwright test ci-smoke-test.spec.ts
        # Optionally try full tests on Linux only where we have better control
        if [ "${{ runner.os }}" = "Linux" ]; then
          pnpm --filter @vibetree/desktop exec playwright test final-test.spec.ts --reporter=list || echo "Full e2e tests failed, but smoke tests passed"
        fi
      env:
        CI: true
        DISPLAY: ${{ runner.os == 'Linux' && ':99' || '' }}
        ELECTRON_DISABLE_SANDBOX: 1

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results-${{ matrix.os }}
        path: apps/desktop/test-results/
        retention-days: 7

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.os }}
        path: apps/desktop/playwright-report/
        retention-days: 7

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-screenshots-${{ matrix.os }}
        path: apps/desktop/*.png
        retention-days: 7